// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user by token data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by token data",
                "responses": {}
            }
        },
        "/account/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user data by token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user data by token",
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user token data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user token data",
                "parameters": [
                    {
                        "description": "User dto for modify user",
                        "name": "ModifyUserDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ModifyUserDto"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/account/login": {
            "post": {
                "description": "login in api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Login for user",
                "parameters": [
                    {
                        "description": "User  dto for login in",
                        "name": "userDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserDto"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/account/register": {
            "post": {
                "description": "Register in api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Register for user",
                "parameters": [
                    {
                        "description": "Create user dto for register in",
                        "name": "createUserDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserDto"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dtos.CreateUserDto": {
            "type": "object",
            "required": [
                "first_name",
                "password",
                "second_name",
                "username"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                },
                "second_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "dtos.ModifyUserDto": {
            "type": "object",
            "required": [
                "first_name",
                "new_password",
                "old_password",
                "second_name",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "new_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                },
                "old_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                },
                "second_name": {
                    "type": "string",
                    "maxLength": 50
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "dtos.UserDto": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Account API",
	Description:      "API for managing users",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
